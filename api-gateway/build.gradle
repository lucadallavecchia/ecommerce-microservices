plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

group = "${projectGroup}"
version = "${majorVersion}.${minorVersion}.${patchVersion}"

repositories {
	mavenCentral()
}

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(21))
	}
}

dependencies {
	implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// Dipendenza corretta per Netty DNS resolver su macOS
	runtimeOnly "io.netty:netty-resolver-dns-native-macos:4.1.107.Final:${System.getProperty('os.arch') == 'aarch64' ? 'osx-aarch_64' : 'osx-x86_64'}"

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('updateReadme') {
	doLast {
		def readmeFile = file("${rootDir}/README.md")
		def readmeText = readmeFile.text
		def group = "${projectGroup}"
		def version = "${majorVersion}.${minorVersion}.${patchVersion}"

		def updatedText = readmeText.replaceFirst(
				/(?s)(?<=<!-- START_VERSION -->).*?(?=<!-- END_VERSION -->)/,
				"\n- **Group:** ${group}\n- **Version:** ${version}\n"
		)

		readmeFile.text = updatedText
	}
}
